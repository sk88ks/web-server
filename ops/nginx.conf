#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #cssのzipを有効にするためには下記設定
    #gzip_types text/css;

    upstream api-backend {
        least_conn;
        server 172.30.2.23:8080;
        server 172.30.2.20:8080;
    }

    # proxy
    proxy_buffering     on;
    proxy_buffer_size   8k;
    proxy_buffers       100 8k;
    proxy_cache_path    /var/cache/nginx/proxy_temp levels=1:2
                        keys_zone=cache1:15m max_size=512m inactive=7d;
    proxy_temp_path     /var/tmp/nginx 1 2;
    proxy_cache_valid   200 302 2h;
    proxy_cache_valid   301     4h;
    proxy_cache_valid   any     1m;
    proxy_cache_use_stale  error timeout invalid_header updating
                           http_500 http_502 http_503 http_504;

    # set header
    proxy_set_header   Host                $host;
    proxy_set_header   X-Real-IP           $remote_addr;
    proxy_set_header   X-Remote-Addr       $remote_addr;
    proxy_set_header   X-Forwarded-Host    $host;
    proxy_set_header   X-Forwarded-Server  $host;
    proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for;

    server {
        listen       8080;
        server_name  localhost 172.0.0.1;
        client_max_body_size 5m;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;

        location / {
                set $do_not_cache 0;
                proxy_no_cache    $do_not_cache;
                proxy_cache_bypass      $do_not_cache;
                proxy_pass http://backend;
                proxy_cache cache1;
                proxy_cache_key $scheme//$host$request_uri;
                #proxy_cache_valid     200 10m;
                #proxy_cache_valid     302 10m;
                #proxy_cache_valid     301 4m;
                #proxy_cache_valid     any 1m;
        }

        # nginxから静的ファイルを配信する場合
        # location ~ ^/(img|css|js)/ {
        #         #gzip_static  on;
        #         #gzip_types text/css application/x-javascript;
        #         open_file_cache max=100 inactive=360s;
        #         # open_file_cache max=100000 inactive=20s # キャッシュファイル最大数とキャッシュ時間
        #         # open_file_cache_valid 30s; # チェック間隔
        #         # open_file_cache_min_uses 2; # 非アクティブファイルの最小ファイル数
        #         # open_file_cache_errors on; # ファイルのエラーもキャッシュする
        #         root /home/user/directory/
        # }
    }

    server {
        listen       80;
        server_name  localhost 172.0.0.1;
        client_max_body_size 5m;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;

        location / {
                set $do_not_cache 0;
                proxy_no_cache    $do_not_cache;
                proxy_cache_bypass      $do_not_cache;
                proxy_pass http://api-backend;
                proxy_cache cache1;
                proxy_cache_key $scheme//$host$request_uri;
                #proxy_cache_valid     200 10m;
                #proxy_cache_valid     302 10m;
                #proxy_cache_valid     301 4m;
                #proxy_cache_valid     any 1m;
        }

        # nginxから静的ファイルを配信する場合
        # location ~ ^/(img|css|js)/ {
        #         #gzip_static  on;
        #         #gzip_types text/css application/x-javascript;
        #         open_file_cache max=100 inactive=360s;
        #         # open_file_cache max=100000 inactive=20s # キャッシュファイル最大数とキャッシュ時間
        #         # open_file_cache_valid 30s; # チェック間隔
        #         # open_file_cache_min_uses 2; # 非アクティブファイルの最小ファイル数
        #         # open_file_cache_errors on; # ファイルのエラーもキャッシュする
        #         root /home/user/directory/
        # }
    }

    include /etc/nginx/sites-enabled/*;

#
#    server {
#        listen       8080;
#        server_name  localhost;
#
#        #charset koi8-r;
#
#        #access_log  logs/host.access.log  main;
#
#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
#
#        #error_page  404              /404.html;
#
#        # redirect server error pages to the static page /50x.html
#        #
#        error_page   500 502 503 504  /50x.html;
#        location = /50x.html {
#            root   html;
#        }
#
#        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#        #
#        #location ~ \.php$ {
#        #    proxy_pass   http://127.0.0.1;
#        #}
#
#        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#        #
#        #location ~ \.php$ {
#        #    root           html;
#        #    fastcgi_pass   127.0.0.1:9000;
#        #    fastcgi_index  index.php;
#        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#        #    include        fastcgi_params;
#        #}
#
#        # deny access to .htaccess files, if Apache's document root
#        # concurs with nginx's one
#        #
#        #location ~ /\.ht {
#        #    deny  all;
#        #}
#    }
#
#
#    # another virtual host using mix of IP-, name-, and port-based configuration
#    #
#    #server {
#    #    listen       8000;
#    #    listen       somename:8080;
#    #    server_name  somename  alias  another.alias;
#
#    #    location / {
#    #        root   html;
#    #        index  index.html index.htm;
#    #    }
#    #}
#
#
#    # HTTPS server
#    #
#    #server {
#    #    listen       443 ssl;
#    #    server_name  localhost;
#
#    #    ssl_certificate      cert.pem;
#    #    ssl_certificate_key  cert.key;
#
#    #    ssl_session_cache    shared:SSL:1m;
#    #    ssl_session_timeout  5m;
#
#    #    ssl_ciphers  HIGH:!aNULL:!MD5;
#    #    ssl_prefer_server_ciphers  on;
#
#    #    location / {
#    #        root   html;
#    #        index  index.html index.htm;
#    #    }
#    #}
#    include servers/*;
}
